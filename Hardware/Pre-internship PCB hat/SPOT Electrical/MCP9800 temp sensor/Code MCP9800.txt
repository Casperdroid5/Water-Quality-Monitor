#define SENSOR_ADDR 0b1001000

#define REGISTER_TEMPERATURE    0
#define REGISTER_CONFIG         1
#define REGISTER_HYSTERESIS     2
#define REGISTER_LIMIT          3

#define BIT_9   0b00000000
#define BIT_10  0b00100000
#define BIT_11  0b01000000
#define BIT_12  0b01100000



//-------------------------temperature sensor --------------------------

void initSensor(void){
    int handle = i2cOpen(1,SENSOR_ADDR,0);
    if(handle <= 0){
        cout << "succeeded" << endl;
    }else{
        cout << "not succeeded" << endl;
    }
    i2cWriteByteData(handle,REGISTER_CONFIG,BIT_12);
    i2cClose(handle);

}

float getTemperature(void){
    int handle = i2cOpen(1,SENSOR_ADDR,0);
    u_int16_t data = i2cReadWordData(handle,REGISTER_TEMPERATURE);
    i2cClose(handle);

    u_int16_t arg1 = data & 0xFF;
    u_int16_t arg2 = (data >> 8);

    return arg1 + (arg2 * (1.0 / 255.0));
}

void initTimer0(void){
    gpioSetTimerFunc(0, 1000, timer0Passed); // 1000mS
}

void timer0Passed(void){
    isTime0Passed = true;
    cout << "Temperature is: " << getTemperature() << endl;
}
//----------------------------------------------------------------------